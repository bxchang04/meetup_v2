{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","event","showDetails","handleShowDetails","setState","this","className","props","name","local_date","onClick","description","Component","EventList","events","map","key","id","mockEvents","created","duration","date_in_series_pattern","status","time","local_time","updated","utc_offset","waitlist_count","yes_rsvp_count","venue","lat","lon","repinned","address_1","city","country","localized_country_name","zip","join_mode","urlname","who","localized_location","region","timezone","link","visibility","member_pay_fee","getSuggestions","query","a","async","window","location","href","startsWith","name_string","getAccessToken","token","url","axios","get","result","data","getEvents","page","navigator","onLine","infoText","localStorage","getItem","JSON","parse","length","setItem","stringify","accessToken","searchParams","URLSearchParams","search","code","getOrRenewAccessToken","lastSavedTime","Date","now","refreshToken","type","tokenInfo","access_token","refresh_token","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","suggestions","handleInputChanged","value","target","then","handleItemClicked","updateEvents","onChange","item","NumberOfEvents","numberOfEvents","App","defaultCity","response","countEventsOnADate","date","count","i","getData","next7Days","currentDate","moment","add","dateString","format","push","number","height","margin","top","right","bottom","left","dataKey","cursor","strokeDasharray","fill","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install","Error"],"mappings":"qRAuCeA,G,kNApCbC,MAAQ,CACNC,MAAO,GACPC,aAAa,G,EAGfC,kBAAoB,YACY,IAA3B,EAAKH,MAAME,YACZ,EAAKE,SAAS,CAAEF,aAAa,IAG7B,EAAKE,SAAS,CAAEF,aAAa,K,wEAIvB,IAAD,OACDA,EAAcG,KAAKL,MAAME,YAE/B,OACE,yBAAKI,UAAU,SACb,yBAAKA,UAAU,mBACb,uBAAGA,UAAU,yBAAyBD,KAAKE,MAAMN,MAAMO,MACvD,uBAAGF,UAAU,8BAA8BD,KAAKE,MAAMN,MAAMQ,YAG5D,4BAAQC,QAAS,kBAAM,EAAKP,sBAA5B,iBAEDD,GACC,yBAAKI,UAAU,kBACb,uBAAGA,UAAU,+BAA+BD,KAAKE,MAAMN,MAAMU,mB,GA7BrDC,cCgBLC,E,iLAZX,OACE,wBAAIP,UAAU,aACXD,KAAKE,MAAMO,OAAOC,KAAI,SAAAd,GAAK,OAC1B,wBAAIe,IAAKf,EAAMgB,IACb,kBAAC,EAAD,CAAOhB,MAAOA,a,GAPFW,a,iBCDlBM,EAWI,CACN,CACEC,QAAS,aACTC,SAAU,KACVH,GAAI,gBACJT,KAAM,0BACNa,wBAAwB,EACxBC,OAAQ,WACRC,KAAM,WACNd,WAAY,aACZe,WAAY,QACZC,QAAS,aACTC,YAAa,KACbC,eAAgB,EAChBC,eAAgB,EACdC,MAAO,CACPZ,GAAI,OACJT,KAAM,kCACNsB,IAAK,kBACLC,KAAM,kBACNC,UAAU,EACVC,UAAW,oBACXC,KAAM,YACNC,QAAS,KACTC,uBAAwB,MACxBC,IAAK,QACLrC,MAAO,MAET,MAAS,CACPmB,QAAS,aACTX,KAAM,SACNS,GAAI,QACJqB,UAAW,OACXR,IAAK,mBACLC,KAAM,kBACNQ,QAAS,sCACTC,IAAK,UACLC,mBAAoB,gBACpBzC,MAAO,KACPmC,QAAS,KACTO,OAAQ,QACRC,SAAU,cAEVC,KAAM,mFACNjC,YAAa,yBACbkC,WAAY,SACZC,gBAAgB,GAEpB,CACE3B,QAAS,aACTC,SAAU,KACVH,GAAI,gBACJT,KAAM,0BACNa,wBAAwB,EACxBC,OAAQ,WACRC,KAAM,WACNd,WAAY,aACZe,WAAY,QACZC,QAAS,aACTC,YAAa,KACbC,eAAgB,EAChBC,eAAgB,EACdC,MAAO,CACPZ,GAAI,MACJT,KAAM,kCACNsB,IAAK,kBACLC,KAAM,kBACNC,UAAU,EACVC,UAAW,oBACXC,KAAM,YACNC,QAAS,KACTC,uBAAwB,MACxBC,IAAK,QACLrC,MAAO,MAET,MAAS,CACPmB,QAAS,aACTX,KAAM,SACNS,GAAI,QACJqB,UAAW,OACXR,IAAK,mBACLC,KAAM,kBACNQ,QAAS,sCACTC,IAAK,UACLC,mBAAoB,gBACpBzC,MAAO,KACPmC,QAAS,KACTO,OAAQ,QACRC,SAAU,cAEVC,KAAM,mFACNjC,YAAa,yBACbkC,WAAY,SACZC,gBAAgB,I,iBCvGxB,SAAeC,EAAeC,GAA9B,mBAAAC,EAAAC,OAAA,oDACMC,OAAOC,SAASC,KAAKC,WAAW,oBADtC,yCAEW,CACL,CACEpB,KAAM,SACNC,QAAS,KACTC,uBAAwB,UACxBmB,YAAa,kBACblB,IAAK,UACLP,IAAK,MACLC,IAAK,OAEP,CACEG,KAAM,SACNC,QAAS,KACTC,uBAAwB,MACxBpC,MAAO,KACPuD,YAAa,4BACblB,IAAK,QACLP,IAAK,MACLC,KAAM,SApBd,yBAAAkB,EAAA,MAyBsBO,KAzBtB,YAyBQC,EAzBR,gCA2BUC,EAAM,4EACRV,EACA,iBAAmBS,EA7B3B,WAAAR,EAAA,MA8ByBU,IAAMC,IAAIF,IA9BnC,cA8BUG,EA9BV,yBA+BWA,EAAOC,MA/BlB,iCAiCS,IAjCT,sCAoCA,SAAeC,EAAUjC,EAAKC,EAAKiC,GAAnC,uBAAAf,EAAAC,OAAA,oDACMC,OAAOC,SAASC,KAAKC,WAAW,oBADtC,yCAEWpC,GAFX,UAKO+C,UAAUC,OALjB,uBAMI7D,KAAKD,SAAS,CAAE+D,SAAU,yIACpBrD,EAASsD,aAAaC,QAAQ,cAPxC,kBAQWC,KAAKC,MAAMzD,IARtB,yBAAAmC,EAAA,MAWsBO,KAXtB,YAWQC,EAXR,gCAcQC,EAAM,yFACaD,EAEnB3B,GAAOC,IACT2B,GAAO,QAAU5B,EAAM,QAAUC,GAE/BiC,IACFN,GAAO,SAAWM,GAEhBlC,GAAOC,GAAOiC,IAChBN,GAAO,QAAU5B,EAAM,QAAUC,EAAM,SAAWiC,GAxBxD,YAAAf,EAAA,MA0ByBU,IAAMC,IAAIF,IA1BnC,eA0BUG,EA1BV,QA2BU/C,EAAS+C,EAAOC,KAAKhD,QACd0D,QACTJ,aAAaK,QAAQ,aAAcH,KAAKI,UAAU5D,IA7B1D,kBAgCWA,GAhCX,gDAoCA,SAAe0C,IAAf,uBAAAP,EAAAC,OAAA,mDACQyB,EAAcP,aAAaC,QAAQ,gBAD3C,mBAIUO,EAAe,IAAIC,gBAAgB1B,OAAOC,SAAS0B,QACnDC,EAAOH,EAAahB,IAAI,QALlC,uBAQMT,OAAOC,SAASC,KAAO,wJAR7B,kBASa,MATb,gCAYW2B,EAAsB,MAAOD,IAZxC,UAeQE,EAAgBb,aAAaC,QAAQ,qBAEvCM,GAAgBO,KAAKC,MAAQF,EAAgB,MAjBnD,0CAkBWN,GAlBX,eAqBQS,EAAehB,aAAaC,QAAQ,iBArB5C,kBAuBSW,EAAsB,QAASI,IAvBxC,sCA0BA,SAAeJ,EAAsBK,EAAMrE,GAA3C,iBAAAiC,EAAAC,OAAA,sDAEe,QAATmC,EAEF3B,EAAM,2EACF1C,EACc,UAATqE,IAET3B,EAAM,6EACF1C,GATR,WAAAiC,EAAA,MAa0BU,IAAMC,IAAIF,IAbpC,cAaQ4B,EAbR,OAgBElB,aAAaK,QAAQ,eAAgBa,EAAUxB,KAAKyB,cACpDnB,aAAaK,QAAQ,gBAAiBa,EAAUxB,KAAK0B,eACrDpB,aAAaK,QAAQ,kBAAmBS,KAAKC,OAlB/C,kBAqBSG,EAAUxB,KAAKyB,cArBxB,qC,ICnGME,E,YACJ,WAAYlF,GAAQ,IAAD,8BACjB,4CAAMA,KAIRmF,SAAW,WACT,MAAO,CACLC,MAAO,EAAKA,QALd,EAAKA,MAAQ,KAFI,E,sEAYjB,OACE,yBAAKrF,UAAU,SACb,uBAAGsF,MAAOvF,KAAKqF,YAAarF,KAAKE,MAAMsF,W,GAf3BjF,aAqBdkF,E,YACJ,WAAYvF,GAAQ,IAAD,8BACjB,4CAAMA,KACDoF,MAAQ,OAFI,E,2BADGF,GAOlBM,E,YACJ,WAAYxF,GAAQ,IAAD,8BACjB,4CAAMA,KACDoF,MAAQ,MAFI,E,2BADIF,GCwBVO,E,2MAhDbhG,MAAQ,CACNgD,MAAO,GACPiD,YAAa,I,EAGfC,mBAAqB,SAACjG,GACpB,IAAMkG,EAAQlG,EAAMmG,OAAOD,MAC3B,EAAK/F,SAAS,CAAE4C,MAAOmD,IACvBpD,EAAeoD,GAAOE,MAAK,SAAAJ,GACzB,EAAK7F,SAAS,CAAE6F,gBAEZE,GAAgC,IAAvBF,EAAYzB,OACvB,EAAKpE,SAAS,CACZ+D,SAAU,6EAGZ,EAAK/D,SAAS,CACZ+D,SAAU,S,EAMlBmC,kBAAoB,SAACH,EAAOrE,EAAKC,GAC/B,EAAK3B,SAAS,CAAE4C,MAAOmD,EAAOF,YAAa,KAC3C,EAAK1F,MAAMgG,aAAazE,EAAKC,I,wEAGrB,IAAD,OACP,OACE,yBAAKzB,UAAU,cACf,2BACI+E,KAAK,OACL/E,UAAU,OACV6F,MAAO9F,KAAKL,MAAMgD,MAClBwD,SAAUnG,KAAK6F,qBAEjB,wBAAI5F,UAAU,eACXD,KAAKL,MAAMiG,YAAYlF,KAAI,SAAA0F,GAAI,OAC9B,wBAAIzF,IAAKyF,EAAKlD,YAAa7C,QAAS,kBAAM,EAAK4F,kBAAkBG,EAAKlD,YAAakD,EAAK3E,IAAK2E,EAAK1E,OAAO0E,EAAKlD,iBAGlH,kBAAC,EAAD,CAAWsC,KAAMxF,KAAKL,MAAMmE,gB,GA5CXvD,aCsCV8F,E,2MArCb1G,MAAQ,CACN2G,eAAgB,I,EAGlBT,mBAAqB,SAACjG,GACpB,IAAMkG,EAAQlG,EAAMmG,OAAOD,MAC3B,EAAK/F,SAAS,CAAEuG,eAAgBR,IAChC,EAAK5F,MAAMgG,aAAa,KAAM,KAAMJ,GAEhCA,EAAQ,EACV,EAAK/F,SAAS,CACZ+D,SAAU,gCAGZ,EAAK/D,SAAS,CACZ+D,SAAU,M,wEAOd,OACE,yBAAK7D,UAAU,kBACb,qDACA,2BACE+E,KAAK,OACLpE,GAAG,wBACHkF,MAAO9F,KAAKL,MAAM2G,eAClBH,SAAUnG,KAAK6F,qBAEjB,kBAAC,EAAD,CAAYL,KAAMxF,KAAKL,MAAMmE,gB,GAjCRvD,a,0BCmFdgG,E,2MAtEb5G,MAAQ,CACNc,OAAQ,GACRkD,KAAM,KACN6C,YAAa,GACb/E,IAAK,KACLC,IAAK,M,EAGPwE,aAAe,SAACzE,EAAKC,EAAKiC,GACrBlC,GAAOC,EACRgC,EAAUjC,EAAKC,EAAK,EAAK/B,MAAMgE,MAAMqC,MAAK,SAAAS,GAAQ,OAAI,EAAK1G,SAAS,CAAEU,OAAQgG,EAAUhF,MAAKC,WAEtFiC,EACPD,EAAU,EAAK/D,MAAM8B,IAAK,EAAK9B,MAAM+B,IAAKiC,GAAMqC,MAAK,SAAAS,GAAQ,OAAI,EAAK1G,SAAS,CAAEU,OAAQgG,EAAU9C,YAGnGD,EAAU,EAAK/D,MAAM8B,IAAK,EAAK9B,MAAM+B,IAAK,EAAK/B,MAAMgE,MAAMqC,MAAK,SAAAS,GAAQ,OAAI,EAAK1G,SAAS,CAAEU,OAAQgG,Q,EAIxGC,mBAAqB,SAACC,GAEpB,IADA,IAAIC,EAAQ,EACHC,EAAI,EAAGA,EAAI,EAAKlH,MAAMc,OAAO0D,OAAQ0C,GAAK,EAC7C,EAAKlH,MAAMc,OAAOoG,GAAGzG,aAAeuG,IACtCC,GAAS,GAGb,OAAOA,G,EAGTE,QAAU,WAIR,IAHA,IAAMC,EAAY,GACZC,EAAcC,MAEXJ,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7BG,EAAYE,IAAI,EAAG,QACnB,IAAMC,EAAaH,EAAYI,OAAO,cAEhCR,EAAQ,EAAKF,mBAAmBS,GACtCJ,EAAUM,KAAK,CAAEV,KAAMQ,EAAYG,OAAQV,IAE7C,OAAOG,G,mFA7CY,IAAD,OAClBrD,IAAYsC,MAAK,SAAAS,GAAQ,OAAI,EAAK1G,SAAS,CAAEU,OAAQgG,S,+BAgDrD,OACE,yBAAKxG,UAAU,OACb,kBAAC,EAAD,CAAYiG,aAAclG,KAAKkG,eAC/B,kBAAC,EAAD,CAAgBA,aAAclG,KAAKkG,aAAcI,eAAgBtG,KAAKL,MAAMc,OAAO0D,OAAQ1C,IAAKzB,KAAKL,MAAM8B,IAAKC,IAAK1B,KAAKL,MAAM+B,MAEhI,kBAAC,IAAD,CAAqB6F,OAAQ,KAC3B,kBAAC,IAAD,CACEC,OAAQ,CACNC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,KAGxC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAO5C,KAAK,WAAW6C,QAAQ,OAAO1H,KAAK,SAC3C,kBAAC,IAAD,CAAO6E,KAAK,SAAS6C,QAAQ,SAAS1H,KAAK,gBAC3C,kBAAC,IAAD,CAAS2H,OAAQ,CAAEC,gBAAiB,SACpC,kBAAC,IAAD,CAAStE,KAAMzD,KAAK8G,UAAWkB,KAAK,cAIxC,kBAAC,EAAD,CAAWvH,OAAQT,KAAKL,MAAMc,c,GAtEpBF,aCEZ0H,EAAcC,QACW,cAA7BpF,OAAOC,SAASoF,UAEe,UAA7BrF,OAAOC,SAASoF,UAEhBrF,OAAOC,SAASoF,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9B3E,UAAU4E,cACPC,SAASH,GACTtC,MAAK,SAAA0C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjJ,QACfiE,UAAU4E,cAAcO,YAI1BC,QAAQC,IACN,iHAKEV,GAAUA,EAAOW,UACnBX,EAAOW,SAASR,KAMlBM,QAAQC,IAAI,sCAGRV,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,YCzFjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDe1C,SAAkBlB,GACvB,GAA6C,kBAAmB3E,UAAW,CAGzE,GADkB,IAAI8F,IAAIC,aAAwB7G,OAAOC,SAASC,MACpD4G,SAAW9G,OAAOC,SAAS6G,OAIvC,OAGF9G,OAAO+G,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMqB,aAAN,sBAEP1B,IAgEV,SAAiCK,EAAOC,GAEtCuB,MAAMxB,EAAO,CACXyB,QAAS,CAAE,iBAAkB,YAE5B/D,MAAK,SAAAS,GAEJ,IAAMuD,EAAcvD,EAASsD,QAAQxG,IAAI,gBAEnB,MAApBkD,EAASxF,QACO,MAAf+I,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5CrG,UAAU4E,cAAc0B,MAAMlE,MAAK,SAAA0C,GACjCA,EAAayB,aAAanE,MAAK,WAC7BlD,OAAOC,SAASqH,eAKpB/B,EAAgBC,EAAOC,MAG1Ba,OAAM,WACLJ,QAAQC,IACN,oEAvFAoB,CAAwB/B,EAAOC,GAI/B3E,UAAU4E,cAAc0B,MAAMlE,MAAK,WACjCgD,QAAQC,IACN,iHAMJZ,EAAgBC,EAAOC,OCrC/BC,GACA8B,SAAc,oCAAoCC,UAElDD,SAAc,IAAIE,MAAM,wB","file":"static/js/main.9ce9ad84.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    event: [],\r\n    showDetails: false\r\n  }\r\n\r\n  handleShowDetails = () => {\r\n    if(this.state.showDetails === false) {\r\n      this.setState({ showDetails: true });\r\n    }\r\n    else {\r\n      this.setState({ showDetails: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const showDetails = this.state.showDetails;\r\n\r\n    return(\r\n      <div className=\"event\">\r\n        <div className=\"event__Overview\">\r\n          <p className=\"event__Overview--name\">{this.props.event.name}</p>\r\n          <p className=\"event__Overview--localDate\">{this.props.event.local_date}</p>\r\n          {/*doesn't show # of people going, like in 4.4 screenshot*/}\r\n          {/*<button className=\"details-btn\" onClick={() => this.handleShowDetails()}>show details</button>*/}\r\n          <button onClick={() => this.handleShowDetails()}>show details</button>\r\n        </div>\r\n        {showDetails &&\r\n          <div className=\"event__Details\">\r\n            <p className=\"event__Details--description\">{this.props.event.description}</p>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {this.props.events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","//online converter is down - https://json-to-js.com/. And I don't know how to run the CLI version.\r\n\r\nconst mockEvents = {\r\n  city: {\r\n    id: 2459,\r\n    city: 'Newton Center',\r\n    lat: 42.31,\r\n    lon: -71.19,\r\n    state: 'MA',\r\n    country: 'us',\r\n    ip: '02459',\r\n    member_count: 417\r\n  },\r\n  events: [\r\n    {\r\n      created: 1521736237000,\r\n      duration: 5400000,\r\n      id: 'kvmmmpybcdbgb',\r\n      name: 'Placeholder for event 1',\r\n      date_in_series_pattern: false,\r\n      status: 'upcoming',\r\n      time: 1580860800000,\r\n      local_date: '2020-02-04',\r\n      local_time: '19:00',\r\n      updated: 1521736237000,\r\n      utc_offset: -18000000,\r\n      waitlist_count: 0,\r\n      yes_rsvp_count: 4,\r\n        venue: {\r\n        id: 918727,\r\n        name: 'Cambridge Friends Meeting House',\r\n        lat: 42.37584686279297,\r\n        lon: -71.12735748291016,\r\n        repinned: false,\r\n        address_1: '5 Longfellow Park',\r\n        city: 'Cambridge',\r\n        country: 'us',\r\n        localized_country_name: 'USA',\r\n        zip: '02138',\r\n        state: 'MA'\r\n      },\r\n      'group': {\r\n        created: 1343594111000,\r\n        name: 'Group1',\r\n        id: 4420182,\r\n        join_mode: 'open',\r\n        lat: 42.380001068115234,\r\n        lon: -71.12999725341797,\r\n        urlname: 'Cambridge-Buddhist-Meditation-Group',\r\n        who: 'Members',\r\n        localized_location: 'Cambridge, MA',\r\n        state: 'MA',\r\n        country: 'us',\r\n        region: 'en_US',\r\n        timezone: 'US/Eastern'\r\n        },\r\n        link: 'https://www.meetup.com/Cambridge-Buddhist-Meditation-Group/events/kvmmmpybcdbgb/',\r\n        description: 'placeholder desc here.',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n    },\r\n    {\r\n      created: 1521736237000,\r\n      duration: 5400000,\r\n      id: 'kvmmmpybcdbgc',\r\n      name: 'Placeholder for event 2',\r\n      date_in_series_pattern: false,\r\n      status: 'upcoming',\r\n      time: 1580860800000,\r\n      local_date: '2020-02-04',\r\n      local_time: '19:00',\r\n      updated: 1521736237000,\r\n      utc_offset: -18000000,\r\n      waitlist_count: 0,\r\n      yes_rsvp_count: 4,\r\n        venue: {\r\n        id: 91872,\r\n        name: 'Cambridge Friends Meeting House',\r\n        lat: 42.37584686279297,\r\n        lon: -71.12735748291016,\r\n        repinned: false,\r\n        address_1: '5 Longfellow Park',\r\n        city: 'Cambridge',\r\n        country: 'us',\r\n        localized_country_name: 'USA',\r\n        zip: '02138',\r\n        state: 'MA'\r\n      },\r\n      'group': {\r\n        created: 1343594111000,\r\n        name: 'Group2',\r\n        id: 4420183,\r\n        join_mode: 'open',\r\n        lat: 42.380001068115235,\r\n        lon: -71.12999725341798,\r\n        urlname: 'Cambridge-Buddhist-Meditation-Group',\r\n        who: 'Members',\r\n        localized_location: 'Cambridge, MA',\r\n        state: 'MA',\r\n        country: 'us',\r\n        region: 'en_US',\r\n        timezone: 'US/Eastern'\r\n        },\r\n        link: 'https://www.meetup.com/Cambridge-Buddhist-Meditation-Group/events/kvmmmpybcdbgb/',\r\n        description: 'placeholder desc here.',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n    }\r\n  ]\r\n}\r\n\r\nexport { mockEvents };\r\n","import { mockEvents } from './mock-events';\r\nimport axios from 'axios';\r\n\r\nasync function getSuggestions(query) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return [\r\n      {\r\n        city: 'Munich',\r\n        country: 'de',\r\n        localized_country_name: 'Germany',\r\n        name_string: 'Munich, Germany',\r\n        zip: 'meetup3',\r\n        lat: 48.14,\r\n        lon: 11.58\r\n      },\r\n      {\r\n        city: 'Munich',\r\n        country: 'us',\r\n        localized_country_name: 'USA',\r\n        state: 'ND',\r\n        name_string: 'Munich, North Dakota, USA',\r\n        zip: '58352',\r\n        lat: 48.66,\r\n        lon: -98.85\r\n      }\r\n    ];\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\r\n      + query\r\n      + '&access_token=' + token;\r\n    const result = await axios.get(url);\r\n    return result.data;\r\n  }\r\n  return [];\r\n}\r\n\r\nasync function getEvents(lat, lon, page) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return mockEvents.events;\r\n  }\r\n\r\n  if (!navigator.onLine) {\r\n    this.setState({ infoText: 'Please note that you are currently offline. The displayed events might not be up to date. The search feature has also been disabled.' })\r\n    const events = localStorage.getItem('lastEvents');\r\n    return JSON.parse(events);\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\r\n      + '&access_token=' + token;\r\n    // lat, lon is optional; if you have a lat and lon, you can add them\r\n    if (lat && lon) {\r\n      url += '&lat=' + lat + '&lon=' + lon;\r\n    }\r\n    if (page) {\r\n      url += '&page=' + page;\r\n    }\r\n    if (lat && lon && page) {\r\n      url += '&lat=' + lat + '&lon=' + lon + '&page=' + page;\r\n    }\r\n    const result = await axios.get(url);\r\n    const events = result.data.events;\r\n      if (events.length) { // Check if the events exist\r\n        localStorage.setItem('lastEvents', JSON.stringify(events));\r\n      }\r\n\r\n    return events;\r\n  }\r\n};\r\n\r\nasync function getAccessToken(){\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  if (!accessToken) {\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get('code');\r\n\r\n    if (!code) {\r\n      window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=3dssascu6mej4fuptij43jdbh4&response_type=code&redirect_uri=https://bxchang04.github.io/meetup_v2';\r\n      return null;\r\n    }\r\n\r\n    return getOrRenewAccessToken('get', code);\r\n  }\r\n\r\n  const lastSavedTime = localStorage.getItem('last_saved_time');\r\n\r\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\r\n    return accessToken;\r\n  }\r\n\r\n  const refreshToken = localStorage.getItem('refresh_token');\r\n\r\n  return getOrRenewAccessToken('renew', refreshToken);\r\n}\r\n\r\nasync function getOrRenewAccessToken(type, key) {\r\n  let url;\r\n  if (type === 'get') {\r\n    // Lambda endpoint to get token by code\r\n    url = 'https://b5zart0jw7.execute-api.eu-central-1.amazonaws.com/dev/api/token/'\r\n      + key;\r\n  } else if (type === 'renew') {\r\n    // Lambda endpoint to get token by refresh_token\r\n    url = 'https://b5zart0jw7.execute-api.eu-central-1.amazonaws.com/dev/api/refresh/'\r\n      + key;\r\n  }\r\n\r\n  // Use Axios to make a GET request to the endpoint\r\n  const tokenInfo = await axios.get(url);\r\n\r\n  // Save tokens to localStorage together with a timestamp\r\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\r\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\r\n  localStorage.setItem('last_saved_time', Date.now());\r\n\r\n  // Return the access_token\r\n  return tokenInfo.data.access_token;\r\n}\r\n\r\nexport { getSuggestions, getEvents };\r\n","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props) ;\r\n      this.color = 'orange';\r\n  }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert, WarningAlert };\r\n","import React, { Component } from 'react';\r\nimport { getSuggestions } from './api';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ query: value });\r\n    getSuggestions(value).then(suggestions => {\r\n      this.setState({ suggestions });\r\n\r\n      if (value && suggestions.length === 0) {\r\n        this.setState({\r\n          infoText: 'We can not find the city you are looking for -- please try another city.',\r\n        });\r\n      } else {\r\n        this.setState({\r\n          infoText: '',\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleItemClicked = (value, lat, lon) => {\r\n    this.setState({ query: value, suggestions: [] });\r\n    this.props.updateEvents(lat, lon);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n      <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ul className=\"suggestions\">\r\n          {this.state.suggestions.map(item =>\r\n            <li key={item.name_string} onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>{item.name_string}</li>\r\n          )}\r\n        </ul>\r\n        <InfoAlert text={this.state.infoText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state = {\r\n    numberOfEvents: 32\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ numberOfEvents: value });\r\n    this.props.updateEvents(null, null, value);\r\n\r\n    if (value < 1) {\r\n      this.setState({\r\n        infoText: 'Number should be at least 1',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        infoText: '',\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"numberOfEvents\">\r\n        <label>Number of Events: </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"numberOfEvents__input\"\r\n          value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ErrorAlert text={this.state.infoText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\nimport moment from 'moment';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nclass App extends Component {\n\n  componentDidMount() {\n    getEvents().then(response => this.setState({ events: response }));\n  }\n\n  state = {\n    events: [],\n    page: null,\n    defaultCity: '',\n    lat: null,\n    lon: null\n  }\n\n  updateEvents = (lat, lon, page) => {\n    if(lat && lon) {\n      getEvents(lat, lon, this.state.page).then(response => this.setState({ events: response, lat, lon }));\n    }\n    else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(response => this.setState({ events: response, page }));\n    }\n    else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(response => this.setState({ events: response }));\n    }\n  }\n\n  countEventsOnADate = (date) => {\n    let count = 0;\n    for (let i = 0; i < this.state.events.length; i += 1) {\n      if (this.state.events[i].local_date === date) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  getData = () => {\n    const next7Days = []; // Create empty array for the next 7 days\n    const currentDate = moment(); // Today\n    // Loop 7 times for next 7 days\n    for (let i = 0; i < 7; i += 1) {\n      currentDate.add(1, 'days'); // Add 1 day to current date, currentDate changes\n      const dateString = currentDate.format('YYYY-MM-DD'); // Format the date\n      // Use the countEventsOnADate function to count #events on this date\n      const count = this.countEventsOnADate(dateString);\n      next7Days.push({ date: dateString, number: count }); // Add this date and number to the list\n    }\n    return next7Days;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEvents={this.updateEvents} numberOfEvents={this.state.events.length} lat={this.state.lat} lon={this.state.lon} />\n\n        <ResponsiveContainer height={400}>\n          <ScatterChart\n            margin={{\n              top: 20, right: 20, bottom: 20, left: 20,\n            }}\n          >\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"date\" name=\"date\" />\n            <YAxis type=\"number\" dataKey=\"number\" name=\"# of events\" />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter data={this.getData()} fill=\"#8884d8\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\natatus.config('265dd06585c64899a04b4e5272208d4f').install();\n\natatus.notify(new Error('Test Atatus Setup'));\n"],"sourceRoot":""}