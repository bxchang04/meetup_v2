{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","expanded","handleShowDetails","setState","prevState","event","this","props","className","local_time","local_date","name","group","yes_rsvp_count","venue","address_1","city","localized_country_name","dangerouslySetInnerHTML","__html","description","visibility","href","link","onClick","Component","EventList","events","map","key","id","mockEvents","created","duration","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","lat","lon","repinned","country","zip","join_mode","urlname","who","localized_location","region","timezone","member_pay_fee","getSuggestions","query","a","async","window","location","startsWith","name_string","getAccessToken","token","url","axios","get","result","data","getEvents","page","navigator","onLine","localStorage","getItem","JSON","parse","length","setItem","stringify","accessToken","searchParams","URLSearchParams","search","code","getOrRenewAccessToken","lastSavedTime","Date","now","refreshToken","type","tokenInfo","access_token","refresh_token","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","WarningAlert","CitySearch","suggestions","infoText","warningText","handleInputChanged","value","target","then","handleItemClicked","updateEvents","onChange","item","NumberOfEvents","numberOfEvents","App","defaultCity","response","_isMounted","undefined","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.54bda787.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    expanded: false,\r\n  }\r\n\r\n  handleShowDetails = () => {\r\n    this.setState(prevState => ({\r\n      expanded: !prevState.expanded\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const event = this.props.event;\r\n    return (\r\n      <div className=\"event\"> {/*changed from Event*/}\r\n        <p className=\"time\">{event.local_time} - {event.local_date}</p>\r\n        <p className=\"name\">{event.name}</p>\r\n        {event.group && event.group.name && <p className=\"group-name\">Group: {event.group.name}</p>}\r\n        <p className=\"going\">{event.yes_rsvp_count} people are going</p>\r\n        {this.state.expanded &&\r\n          <div className=\"extra\">\r\n            {event.venue && event.venue.name &&\r\n              <p className=\"address\">\r\n                {event.venue.name\r\n                  + ', ' + event.venue.address_1\r\n                  + ', ' + event.venue.city\r\n                  + ', ' + event.venue.localized_country_name\r\n                }\r\n              </p>\r\n            }\r\n            <div className=\"description\" dangerouslySetInnerHTML={{__html: event.description}} />\r\n            {/*<div className=\"description\" dangerouslySetInnerHTML={{__html: event.description}} />*/}\r\n            <p className=\"visibility\">{event.visibility}</p>\r\n            <a className=\"link\" href={event.link}>Event Link</a>\r\n            <p className=\"event__Details--description\">{this.props.event.description}</p>\r\n          </div>\r\n        }\r\n        <button className=\"details-btn\" onClick={this.handleShowDetails}>Details</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {this.props.events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","//online converter is down - https://json-to-js.com/. And I don't know how to run the CLI version.\r\n\r\nconst mockEvents = {\r\n  city: {\r\n    id: 2459,\r\n    city: 'Newton Center',\r\n    lat: 42.31,\r\n    lon: -71.19,\r\n    state: 'MA',\r\n    country: 'us',\r\n    ip: '02459',\r\n    member_count: 417\r\n  },\r\n  events: [\r\n    {\r\n      created: 1521736237000,\r\n      duration: 5400000,\r\n      id: 'kvmmmpybcdbgb',\r\n      name: 'Placeholder for event 1',\r\n      date_in_series_pattern: false,\r\n      status: 'upcoming',\r\n      time: 1580860800000,\r\n      local_date: '2020-02-04',\r\n      local_time: '19:00',\r\n      updated: 1521736237000,\r\n      utc_offset: -18000000,\r\n      waitlist_count: 0,\r\n      yes_rsvp_count: 4,\r\n        venue: {\r\n        id: 918727,\r\n        name: 'Cambridge Friends Meeting House',\r\n        lat: 42.37584686279297,\r\n        lon: -71.12735748291016,\r\n        repinned: false,\r\n        address_1: '5 Longfellow Park',\r\n        city: 'Cambridge',\r\n        country: 'us',\r\n        localized_country_name: 'USA',\r\n        zip: '02138',\r\n        state: 'MA'\r\n      },\r\n      'group': {\r\n        created: 1343594111000,\r\n        name: 'Group1',\r\n        id: 4420182,\r\n        join_mode: 'open',\r\n        lat: 42.380001068115234,\r\n        lon: -71.12999725341797,\r\n        urlname: 'Cambridge-Buddhist-Meditation-Group',\r\n        who: 'Members',\r\n        localized_location: 'Cambridge, MA',\r\n        state: 'MA',\r\n        country: 'us',\r\n        region: 'en_US',\r\n        timezone: 'US/Eastern'\r\n        },\r\n        link: 'https://www.meetup.com/Cambridge-Buddhist-Meditation-Group/events/kvmmmpybcdbgb/',\r\n        description: 'placeholder desc here.',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n    },\r\n    {\r\n      created: 1521736237000,\r\n      duration: 5400000,\r\n      id: 'kvmmmpybcdbgc',\r\n      name: 'Placeholder for event 2',\r\n      date_in_series_pattern: false,\r\n      status: 'upcoming',\r\n      time: 1580860800000,\r\n      local_date: '2020-02-04',\r\n      local_time: '19:00',\r\n      updated: 1521736237000,\r\n      utc_offset: -18000000,\r\n      waitlist_count: 0,\r\n      yes_rsvp_count: 4,\r\n        venue: {\r\n        id: 91872,\r\n        name: 'Cambridge Friends Meeting House',\r\n        lat: 42.37584686279297,\r\n        lon: -71.12735748291016,\r\n        repinned: false,\r\n        address_1: '5 Longfellow Park',\r\n        city: 'Cambridge',\r\n        country: 'us',\r\n        localized_country_name: 'USA',\r\n        zip: '02138',\r\n        state: 'MA'\r\n      },\r\n      'group': {\r\n        created: 1343594111000,\r\n        name: 'Group2',\r\n        id: 4420183,\r\n        join_mode: 'open',\r\n        lat: 42.380001068115235,\r\n        lon: -71.12999725341798,\r\n        urlname: 'Cambridge-Buddhist-Meditation-Group',\r\n        who: 'Members',\r\n        localized_location: 'Cambridge, MA',\r\n        state: 'MA',\r\n        country: 'us',\r\n        region: 'en_US',\r\n        timezone: 'US/Eastern'\r\n        },\r\n        link: 'https://www.meetup.com/Cambridge-Buddhist-Meditation-Group/events/kvmmmpybcdbgb/',\r\n        description: 'placeholder desc here.',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n    }\r\n  ]\r\n}\r\n\r\nexport { mockEvents };\r\n","import { mockEvents } from './mock-events';\r\nimport axios from 'axios';\r\n\r\nasync function getSuggestions(query) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return [\r\n      {\r\n        city: 'Munich',\r\n        country: 'de',\r\n        localized_country_name: 'Germany',\r\n        name_string: 'Munich, Germany',\r\n        zip: 'meetup3',\r\n        lat: 48.14,\r\n        lon: 11.58\r\n      },\r\n      {\r\n        city: 'Munich',\r\n        country: 'us',\r\n        localized_country_name: 'USA',\r\n        state: 'ND',\r\n        name_string: 'Munich, North Dakota, USA',\r\n        zip: '58352',\r\n        lat: 48.66,\r\n        lon: -98.85\r\n      }\r\n    ];\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\r\n      + query\r\n      + '&access_token=' + token;\r\n    const result = await axios.get(url);\r\n    return result.data;\r\n  }\r\n  return [];\r\n}\r\n\r\nasync function getEvents(lat, lon, page) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return mockEvents.events;\r\n  }\r\n\r\n  if (!navigator.onLine) {\r\n    const events = localStorage.getItem('lastEvents');\r\n    return JSON.parse(events);\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\r\n      + '&access_token=' + token;\r\n    // lat, lon is optional; if you have a lat and lon, you can add them\r\n    if (lat && lon) {\r\n      url += '&lat=' + lat + '&lon=' + lon;\r\n    }\r\n    if (page) {\r\n      url += '&page=' + page;\r\n    }\r\n    if (lat && lon && page) {\r\n      url += '&lat=' + lat + '&lon=' + lon + '&page=' + page;\r\n    }\r\n    const result = await axios.get(url);\r\n    const events = result.data.events;\r\n      if (events.length) { // Check if the events exist\r\n        localStorage.setItem('lastEvents', JSON.stringify(events));\r\n      }\r\n\r\n    return events;\r\n  }\r\n};\r\n\r\nasync function getAccessToken(){\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  if (!accessToken) {\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get('code');\r\n\r\n    if (!code) {\r\n      window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=3dssascu6mej4fuptij43jdbh4&response_type=code&redirect_uri=https://bxchang04.github.io/meetup_v2';\r\n      return null;\r\n    }\r\n\r\n    return getOrRenewAccessToken('get', code);\r\n  }\r\n\r\n  const lastSavedTime = localStorage.getItem('last_saved_time');\r\n\r\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\r\n    return accessToken;\r\n  }\r\n\r\n  const refreshToken = localStorage.getItem('refresh_token');\r\n\r\n  return getOrRenewAccessToken('renew', refreshToken);\r\n}\r\n\r\nasync function getOrRenewAccessToken(type, key) {\r\n  let url;\r\n  if (type === 'get') {\r\n    // Lambda endpoint to get token by code\r\n    url = 'https://b5zart0jw7.execute-api.eu-central-1.amazonaws.com/dev/api/token/'\r\n      + key;\r\n  } else if (type === 'renew') {\r\n    // Lambda endpoint to get token by refresh_token\r\n    url = 'https://b5zart0jw7.execute-api.eu-central-1.amazonaws.com/dev/api/refresh/'\r\n      + key;\r\n  }\r\n\r\n  // Use Axios to make a GET request to the endpoint\r\n  const tokenInfo = await axios.get(url);\r\n\r\n  // Save tokens to localStorage together with a timestamp\r\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\r\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\r\n  localStorage.setItem('last_saved_time', Date.now());\r\n\r\n  // Return the access_token\r\n  return tokenInfo.data.access_token;\r\n}\r\n\r\nexport { getSuggestions, getEvents };\r\n","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props) ;\r\n      this.color = 'orange';\r\n  }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert, WarningAlert };\r\n","import React, { Component } from 'react';\r\nimport { getSuggestions } from './api';\r\nimport { InfoAlert } from './Alert';\r\nimport {WarningAlert} from \"./Alert\";\r\n\r\nclass CitySearch extends Component {\r\n\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    infoText: '',\r\n    warningText: ''\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ query: value });\r\n    if (!navigator.onLine) {\r\n      this.setState({ warningText: 'You are currently offline, so no queries are possible.' });\r\n    } else {\r\n      this.setState({ warningText: ''});\r\n    }\r\n    getSuggestions(value).then(suggestions => {\r\n      this.setState({ suggestions });\r\n\r\n      if (value && suggestions.length === 0) {\r\n        this.setState({\r\n          infoText: 'We can not find the city you are looking for -- please try another city.',\r\n        });\r\n      } else {\r\n        this.setState({\r\n          infoText: '',\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleItemClicked = (value, lat, lon) => {\r\n    this.setState({ query: value, suggestions: [] });\r\n    this.props.updateEvents(lat, lon);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n      <WarningAlert text={this.state.warningText} />\r\n      <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ul className=\"suggestions\">\r\n          {this.state.suggestions.map(item =>\r\n            <li key={item.name_string} onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>{item.name_string}</li>\r\n          )}\r\n        </ul>\r\n        <InfoAlert text={this.state.infoText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state = {\r\n    numberOfEvents: 32\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ numberOfEvents: value });\r\n    this.props.updateEvents(null, null, value);\r\n\r\n    if (value < 1) {\r\n      this.setState({\r\n        infoText: 'Number should be at least 1',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        infoText: '',\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"numberOfEvents\">\r\n        <label>Number of Events: </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"numberOfEvents__input\"\r\n          value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ErrorAlert text={this.state.infoText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\nimport {WarningAlert} from \"./Alert\";\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    page: null,\n    defaultCity: '',\n    lat: null,\n    lon: null,\n    warningText: ''\n  }\n\n  componentDidMount() {\n    getEvents().then(response => this.setState({ events: response }));\n\n    this._isMounted = true;\n    if (!navigator.onLine) {\n      this.setState({warningText: 'Note: The app is offline, information shown may not be up to date'});\n    } else {\n      this.setState({warningText: ''});\n    };\n    this.updateEvents(undefined, undefined, 32);\n  };\n\n  updateEvents = (lat, lon, page) => {\n    if(lat && lon) {\n      getEvents(lat, lon, this.state.page).then(response => this.setState({ events: response, lat, lon }));\n    }\n    else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(response => this.setState({ events: response, page }));\n    }\n    else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(response => this.setState({ events: response }));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <WarningAlert text={this.state.warningText} />\n        <CitySearch updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEvents={this.updateEvents} numberOfEvents={this.state.events.length} lat={this.state.lat} lon={this.state.lon} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\natatus.config('265dd06585c64899a04b4e5272208d4f').install();\n"],"sourceRoot":""}