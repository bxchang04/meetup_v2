{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","props","handleShowDetails","state","showDetails","setState","getEventData","event","spotsTaken","yes_rsvp_count","name","value","rsvp_limit","this","colors","className","local_time","local_date","group","venue","address_1","city","localized_country_name","height","width","isAnimationActive","data","dataKey","cx","cy","outerRadius","label","map","entry","index","key","fill","verticalAlign","type","stroke","dangerouslySetInnerHTML","__html","description","href","link","onClick","Component","EventList","events","id","mockEvents","created","duration","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","lat","lon","repinned","country","zip","join_mode","urlname","who","localized_location","region","timezone","visibility","member_pay_fee","getSuggestions","query","a","async","window","location","startsWith","name_string","getAccessToken","token","url","axios","get","result","getEvents","page","navigator","onLine","localStorage","getItem","JSON","parse","length","setItem","stringify","accessToken","searchParams","URLSearchParams","search","code","getOrRenewAccessToken","lastSavedTime","Date","now","refreshToken","tokenInfo","access_token","refresh_token","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","WarningAlert","CitySearch","suggestions","infoText","warningText","handleInputChanged","target","then","handleItemClicked","updateEvents","onChange","item","NumberOfEvents","numberOfEvents","App","defaultCity","response","countEventsOnADate","date","count","i","getData","next7Days","currentDate","moment","add","dateString","format","push","number","undefined","margin","top","right","bottom","left","allowDecimals","cursor","strokeDasharray","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.ec1d7bc2.chunk.js","sourcesContent":["//study https://github.com/envincebal/meetup/blob/master/src/Event.js\r\n\r\nimport React, {Component} from \"react\";\r\nimport {ResponsiveContainer, PieChart, Pie, Legend, Tooltip, Cell, Line} from \"recharts\";\r\nclass Event extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showDetails: false\r\n    }\r\n  }\r\n\r\n  handleShowDetails = () => {\r\n    if (!this.state.showDetails) {\r\n      this.setState({showDetails: true});\r\n    } else {\r\n      this.setState({showDetails: false});\r\n    }\r\n  }\r\n\r\n  getEventData = () => {\r\n    const {event} = this.props;\r\n    const spotsTaken = event.yes_rsvp_count;\r\n    const spotsFree = event.rsvp_limit - spotsTaken;\r\n\r\n    return (\r\n      [\r\n        {name: \"Attending\", value: spotsTaken},\r\n        {name: \"Spots Open\", value: spotsFree}\r\n      ]\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {event} = this.props;\r\n    let colors = [\"#e34542\", \"#43e06d\"]\r\n    return (\r\n      <div className=\"event\">\r\n        <p>{event.local_time + \" - \" + event.local_date}</p>\r\n        <p className=\"event-name\">{event.name}</p>\r\n        <p><span className=\"label\">Group:</span> {event.group && event.group.name}</p>\r\n        <p className=\"event-count\"><span className=\"label\">RSVP: </span>{event.yes_rsvp_count} people are going</p>\r\n        {event.venue &&\r\n          <p className=\"event-address\"><span className=\"label\">Address: </span>{ event.venue.address_1}, {event.venue.city}, {event.group.state ? event.group.state : event.venue.localized_country_name}</p>\r\n        }\r\n        <p className=\"event-venue\"><span className=\"label\">Venue: </span>{event.venue && event.venue.name}</p>\r\n        {this.state.showDetails && (\r\n          <div className=\"event-details\">\r\n            <hr/>\r\n            {this.props.event.rsvp_limit ? (\r\n              <ResponsiveContainer height={250}>\r\n              <PieChart width={200} height={200}>\r\n                <Pie isAnimationActive={false} data={this.getEventData()} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={80} label>\r\n                  {\r\n                    this.getEventData().map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={colors[index]}/>\r\n                    ))\r\n                  }\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend verticalAlign=\"top\" height={30}>\r\n                  <Line name=\"Attending\" type=\"monotone\" dataKey=\"spotsTaken\" stroke=\"#8884d8\" />\r\n                  <Line name=\"Spots Open\" type=\"monotone\" dataKey=\"spotsFree\" stroke=\"#82ca9d\" />\r\n                </Legend>\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n            ):(\r\n              \"\"\r\n            )\r\n            }\r\n\r\n            <p className=\"event-description\" dangerouslySetInnerHTML={{__html: event.description}}></p>\r\n            <a className=\"event-link\" href={event.link}>Event Page</a>\r\n          </div>\r\n        )}\r\n        <button onClick={this.handleShowDetails} className=\"details-btn\">Details</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {this.props.events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","//online converter is down - https://json-to-js.com/. And I don't know how to run the CLI version.\r\n\r\nconst mockEvents = {\r\n  city: {\r\n    id: 2459,\r\n    city: 'Newton Center',\r\n    lat: 42.31,\r\n    lon: -71.19,\r\n    state: 'MA',\r\n    country: 'us',\r\n    ip: '02459',\r\n    member_count: 417\r\n  },\r\n  events: [\r\n    {\r\n      created: 1521736237000,\r\n      duration: 5400000,\r\n      id: 'kvmmmpybcdbgb',\r\n      name: 'Placeholder for event 1',\r\n      date_in_series_pattern: false,\r\n      status: 'upcoming',\r\n      time: 1580860800000,\r\n      local_date: '2020-02-04',\r\n      local_time: '19:00',\r\n      updated: 1521736237000,\r\n      utc_offset: -18000000,\r\n      waitlist_count: 0,\r\n      yes_rsvp_count: 4,\r\n        venue: {\r\n        id: 918727,\r\n        name: 'Cambridge Friends Meeting House',\r\n        lat: 42.37584686279297,\r\n        lon: -71.12735748291016,\r\n        repinned: false,\r\n        address_1: '5 Longfellow Park',\r\n        city: 'Cambridge',\r\n        country: 'us',\r\n        localized_country_name: 'USA',\r\n        zip: '02138',\r\n        state: 'MA'\r\n      },\r\n      'group': {\r\n        created: 1343594111000,\r\n        name: 'Group1',\r\n        id: 4420182,\r\n        join_mode: 'open',\r\n        lat: 42.380001068115234,\r\n        lon: -71.12999725341797,\r\n        urlname: 'Cambridge-Buddhist-Meditation-Group',\r\n        who: 'Members',\r\n        localized_location: 'Cambridge, MA',\r\n        state: 'MA',\r\n        country: 'us',\r\n        region: 'en_US',\r\n        timezone: 'US/Eastern'\r\n        },\r\n        link: 'https://www.meetup.com/Cambridge-Buddhist-Meditation-Group/events/kvmmmpybcdbgb/',\r\n        description: 'placeholder desc here.',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n    },\r\n    {\r\n      created: 1521736237000,\r\n      duration: 5400000,\r\n      id: 'kvmmmpybcdbgc',\r\n      name: 'Placeholder for event 2',\r\n      date_in_series_pattern: false,\r\n      status: 'upcoming',\r\n      time: 1580860800000,\r\n      local_date: '2020-02-04',\r\n      local_time: '19:00',\r\n      updated: 1521736237000,\r\n      utc_offset: -18000000,\r\n      waitlist_count: 0,\r\n      yes_rsvp_count: 4,\r\n        venue: {\r\n        id: 91872,\r\n        name: 'Cambridge Friends Meeting House',\r\n        lat: 42.37584686279297,\r\n        lon: -71.12735748291016,\r\n        repinned: false,\r\n        address_1: '5 Longfellow Park',\r\n        city: 'Cambridge',\r\n        country: 'us',\r\n        localized_country_name: 'USA',\r\n        zip: '02138',\r\n        state: 'MA'\r\n      },\r\n      'group': {\r\n        created: 1343594111000,\r\n        name: 'Group2',\r\n        id: 4420183,\r\n        join_mode: 'open',\r\n        lat: 42.380001068115235,\r\n        lon: -71.12999725341798,\r\n        urlname: 'Cambridge-Buddhist-Meditation-Group',\r\n        who: 'Members',\r\n        localized_location: 'Cambridge, MA',\r\n        state: 'MA',\r\n        country: 'us',\r\n        region: 'en_US',\r\n        timezone: 'US/Eastern'\r\n        },\r\n        link: 'https://www.meetup.com/Cambridge-Buddhist-Meditation-Group/events/kvmmmpybcdbgb/',\r\n        description: 'placeholder desc here.',\r\n        visibility: 'public',\r\n        member_pay_fee: false\r\n    }\r\n  ]\r\n}\r\n\r\nexport { mockEvents };\r\n","import { mockEvents } from './mock-events';\r\nimport axios from 'axios';\r\n\r\nasync function getSuggestions(query) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return [\r\n      {\r\n        city: 'Munich',\r\n        country: 'de',\r\n        localized_country_name: 'Germany',\r\n        name_string: 'Munich, Germany',\r\n        zip: 'meetup3',\r\n        lat: 48.14,\r\n        lon: 11.58\r\n      },\r\n      {\r\n        city: 'Munich',\r\n        country: 'us',\r\n        localized_country_name: 'USA',\r\n        state: 'ND',\r\n        name_string: 'Munich, North Dakota, USA',\r\n        zip: '58352',\r\n        lat: 48.66,\r\n        lon: -98.85\r\n      }\r\n    ];\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\r\n      + query\r\n      + '&access_token=' + token;\r\n    const result = await axios.get(url);\r\n    return result.data;\r\n  }\r\n  return [];\r\n}\r\n\r\nasync function getEvents(lat, lon, page) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return mockEvents.events;\r\n  }\r\n\r\n  if (!navigator.onLine) {\r\n    const events = localStorage.getItem('lastEvents');\r\n    return JSON.parse(events);\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\r\n      + '&access_token=' + token;\r\n    // lat, lon is optional; if you have a lat and lon, you can add them\r\n    if (lat && lon) {\r\n      url += '&lat=' + lat + '&lon=' + lon;\r\n    }\r\n    if (page) {\r\n      url += '&page=' + page;\r\n    }\r\n    if (lat && lon && page) {\r\n      url += '&lat=' + lat + '&lon=' + lon + '&page=' + page;\r\n    }\r\n    const result = await axios.get(url);\r\n    const events = result.data.events;\r\n      if (events.length) { // Check if the events exist\r\n        localStorage.setItem('lastEvents', JSON.stringify(events));\r\n      }\r\n\r\n    return events;\r\n  }\r\n};\r\n\r\nasync function getAccessToken(){\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  if (!accessToken) {\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get('code');\r\n\r\n    if (!code) {\r\n      window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=3dssascu6mej4fuptij43jdbh4&response_type=code&redirect_uri=https://bxchang04.github.io/meetup_v2';\r\n      return null;\r\n    }\r\n\r\n    return getOrRenewAccessToken('get', code);\r\n  }\r\n\r\n  const lastSavedTime = localStorage.getItem('last_saved_time');\r\n\r\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\r\n    return accessToken;\r\n  }\r\n\r\n  const refreshToken = localStorage.getItem('refresh_token');\r\n\r\n  return getOrRenewAccessToken('renew', refreshToken);\r\n}\r\n\r\nasync function getOrRenewAccessToken(type, key) {\r\n  let url;\r\n  if (type === 'get') {\r\n    // Lambda endpoint to get token by code\r\n    url = 'https://b5zart0jw7.execute-api.eu-central-1.amazonaws.com/dev/api/token/'\r\n      + key;\r\n  } else if (type === 'renew') {\r\n    // Lambda endpoint to get token by refresh_token\r\n    url = 'https://b5zart0jw7.execute-api.eu-central-1.amazonaws.com/dev/api/refresh/'\r\n      + key;\r\n  }\r\n\r\n  // Use Axios to make a GET request to the endpoint\r\n  const tokenInfo = await axios.get(url);\r\n\r\n  // Save tokens to localStorage together with a timestamp\r\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\r\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\r\n  localStorage.setItem('last_saved_time', Date.now());\r\n\r\n  // Return the access_token\r\n  return tokenInfo.data.access_token;\r\n}\r\n\r\nexport { getSuggestions, getEvents };\r\n","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props) ;\r\n      this.color = 'orange';\r\n  }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert, WarningAlert };\r\n","import React, { Component } from 'react';\r\nimport { getSuggestions } from './api';\r\nimport { InfoAlert } from './Alert';\r\nimport {WarningAlert} from \"./Alert\";\r\n\r\nclass CitySearch extends Component {\r\n\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    infoText: '',\r\n    warningText: ''\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ query: value });\r\n    if (!navigator.onLine) {\r\n      this.setState({ warningText: 'You are currently offline, so no queries are possible.' });\r\n    } else {\r\n      this.setState({ warningText: ''});\r\n    }\r\n    getSuggestions(value).then(suggestions => {\r\n      this.setState({ suggestions });\r\n\r\n      if (value && suggestions.length === 0) {\r\n        this.setState({\r\n          infoText: 'We can not find the city you are looking for -- please try another city.',\r\n        });\r\n      } else {\r\n        this.setState({\r\n          infoText: '',\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleItemClicked = (value, lat, lon) => {\r\n    this.setState({ query: value, suggestions: [] });\r\n    this.props.updateEvents(lat, lon);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n      <WarningAlert text={this.state.warningText} />\r\n      <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ul className=\"suggestions\">\r\n          {this.state.suggestions.map(item =>\r\n            <li key={item.name_string} onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>{item.name_string}</li>\r\n          )}\r\n        </ul>\r\n        <InfoAlert text={this.state.infoText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state = {\r\n    numberOfEvents: 32\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ numberOfEvents: value });\r\n    this.props.updateEvents(null, null, value);\r\n\r\n    if (value < 1) {\r\n      this.setState({\r\n        infoText: 'Number should be at least 1',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        infoText: '',\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"numberOfEvents\">\r\n        <label>Number of Events: </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"numberOfEvents__input\"\r\n          value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ErrorAlert text={this.state.infoText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\nimport moment from 'moment';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport {WarningAlert} from \"./Alert\";\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    page: null,\n    defaultCity: '',\n    lat: null,\n    lon: null,\n    warningText: ''\n  }\n\n  componentDidMount() {\n    getEvents().then(response => this.setState({ events: response }));\n\n    if (!navigator.onLine) {\n      this.setState({warningText: 'Note: The app is offline; information shown may not be up to date.'});\n    } else {\n      this.setState({warningText: ''});\n    };\n    this.updateEvents(undefined, undefined, 32);\n  };\n\n  updateEvents = (lat, lon, page) => {\n    if(lat && lon) {\n      getEvents(lat, lon, this.state.page).then(response => this.setState({ events: response, lat, lon }));\n    }\n    else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(response => this.setState({ events: response, page }));\n    }\n    else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(response => this.setState({ events: response }));\n    }\n  }\n\n  countEventsOnADate = (date) => {\n    let count = 0;\n    for (let i = 0; i < this.state.events.length; i += 1) {\n      if (this.state.events[i].local_date === date) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  getData = () => {\n    const next7Days = []; // Create empty array for the next 7 days\n    const currentDate = moment(); // Today\n    // Loop 7 times for next 7 days\n    for (let i = 0; i < 7; i += 1) {\n      currentDate.add(1, 'days'); // Add 1 day to current date, currentDate changes\n      const dateString = currentDate.format('YYYY-MM-DD'); // Format the date\n      // Use the countEventsOnADate function to count #events on this date\n      const count = this.countEventsOnADate(dateString);\n      next7Days.push({ date: dateString, number: count }); // Add this date and number to the list\n    }\n    return next7Days;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <WarningAlert text={this.state.warningText} />\n        <CitySearch updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEvents={this.updateEvents} numberOfEvents={this.state.events.length} lat={this.state.lat} lon={this.state.lon} />\n\n        <ResponsiveContainer height={400}>\n          <ScatterChart\n            margin={{\n              top: 20, right: 20, bottom: 20, left: 20,\n            }}\n          >\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"date\" name=\"date\" />\n            <YAxis type=\"number\" dataKey=\"number\" name=\"# of events\" allowDecimals={false}/>\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter data={this.getData()} fill=\"#8884d8\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\natatus.config('265dd06585c64899a04b4e5272208d4f').install();\n"],"sourceRoot":""}